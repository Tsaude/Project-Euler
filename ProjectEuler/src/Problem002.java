
//Dynamic Programming example
/*
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */

public class Problem002 {
	public static void main(String args[]){
		//System.out.print(fibonacci());
		int sum = 0;
		int i = 2;
		while(true){
			int fibValue = fibonacci(i);
			if(fibValue > 4000000){
				System.out.println(sum); //4613732
				break;
			}
			else if(fibValue%2 == 0){
				sum += fibValue;
			}
			i++;
		}
		//System.out.println(fibonacci(10));
	}
	
	public static int fibonacci(int level){
		
		int[] table = new int[level +1 ];
		for(int i = 0; i <= level; i++ ){
			if(i==0){
				table[i] = 1;
			}
			else if(i==1){
				table[i] = 1;
			}
			else{
				table[i] = table[i-2]+ table[i-1];
			}
		}
		
		
		
		return table[level];
	}
}
